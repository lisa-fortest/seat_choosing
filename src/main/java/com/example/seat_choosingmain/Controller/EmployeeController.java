package com.example.seat_choosingmain.Controller;

import com.example.seat_choosingmain.Model.*;

import java.util.HashMap;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RequestBody;


@RestController // This means that this class is a Controller
@CrossOrigin(origins="http://localhost:8081")
@RequestMapping(path="/employee") // This means URL's start with /employee (after Application path)
public class EmployeeController {
  @Autowired // This means to get the bean called userRepository
         // Which is auto-generated by Spring, we will use it to handle the data
  private EmployeeRepository employeeRepository;

  //選擇位置
  @PostMapping(path="/choosing") // Map ONLY POST Requests
  public @ResponseBody void chooseSeatEmployee (@RequestBody HashMap<String, Object> seatchoosing) {
    // @ResponseBody means the returned String is the response, not a view name
    // @RequestParam means it is a parameter from the GET or POST request
	Integer empid = (Integer) seatchoosing.get("EmpID");
	Integer floorseatseq = (Integer) seatchoosing.get("floorSeatSEQ");
	Employee update_emp = employeeRepository.findById(empid).get();
	update_emp.setFloorSeatSEQ(floorseatseq);
	employeeRepository.save(update_emp);
  }
//員工清除自己占用位置
  @PostMapping(path="/cancel")
  public @ResponseBody void cancelSeatEmployee (@RequestBody HashMap<String, Object> seatchoosing) {
    // @ResponseBody means the returned String is the response, not a view name
    // @RequestParam means it is a parameter from the GET or POST request
	Integer empid = (Integer) seatchoosing.get("EmpID");
	Employee update_emp = employeeRepository.findById(empid).get();
	update_emp.setFloorSeatSEQ(null);
	employeeRepository.save(update_emp);
  }
  //得到員工資料
  @GetMapping(path="/all")
  public @ResponseBody Iterable<Employee> getAllEmployees() {
    // This returns a JSON or XML with the users
    return employeeRepository.findAll();
  }
}